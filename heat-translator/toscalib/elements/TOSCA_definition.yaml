#######################################################
# Node Type
#######################################################
tosca.nodes.Root:
   properties:
   capabilities:
   interfaces:
      
tosca.nodes.Compute:
   derived_from: tosca.nodes.Root
   properties:
     num_cpus:
      required: no
      type: integer
      constraints:
        - greater_or_equal: 1
      description: >
        Number of (actual or virtual) CPUs associated with the Compute node.
     disk_size:
       required: no
       type: integer
       constraints:
         - greater_or_equal: 0
       description: >
         Size of the local disk, in Gigabytes (GB), available to applications running on the Compute node.
     mem_size:
       required: no
       type: integer
       constraints:
         - greater_or_equal: 0
       description: >
         Size of memory, in Megabytes (MB), available to applications running on the Compute node.
     os_arch:
       required: no
       default: x86_64 
       type: string
       description: >
          The host Operating System (OS) architecture.
     os_type:
       required: yes
       type: string
       description: >
         The host Operating System (OS) type.
     os_distribution:
       required: no
       type: string
       description: >
         The host Operating System (OS) distribution. Examples of valid values for an “os_type” of “Linux” would include:  
         debian, fedora, rhel and ubuntu.
     os_version:
       required: no
       type: integer
       description: >
         The host Operating System version.
     ip_address:
       required: no
       type: string
       description: >
         The primary IP address assigned by the cloud provider that applications may use to access the Compute node.
     
   capabilities:
      host:
         type: tosca.capabilities.Container
         properties:
            containee_types: [tosca.nodes.SoftwareComponent]
      
tosca.nodes.SoftwareComponent:
  derived_from: tosca.nodes.Root
  properties:
    version:
      required: no
      type: string
      description: >
        Software component version.
  requirements:
    - host: tosca.nodes.Compute

tosca.nodes.DBMS:
  derived_from: tosca.nodes.SoftwareComponent
  properties:
    dbms_port:
      required: no
      type: integer
      description: >
        The port the DBMS service will listen to for data and requests.
    dbms_root_password:
      required: yes
      type: string
      description: >
        The root password for the DBMS service.
  capabilities:
    host: 
      type: tosca.capabilities.Container
      properties:
        containee_types: [tosca.nodes.Database]

tosca.nodes.Database:
  derived_from: tosca.nodes.Root
  properties:
    db_user:
      required: yes
      type: string
      description: > 
        User account name for DB administration
    db_name:
      required: yes
      type: string
      description: > 
        The name of the database.
    db_user:
      required: yes
      type: string
      description: >
        The user name of the DB user.
    db_password:
      required: yes
      type: string
      description: >
        The password for the DB user account
  requirements:
    - host: tosca.nodes.DBMS
  capabilities:
    database_endpoint:
      type: tosca.capabilities.Endpoint

tosca.nodes.WebServer:
  derived_from: tosca.nodes.SoftwareComponent
  capabilities:
    http_endpoint:
      type: tosca.capabilities.Endpoint
    https_endpoint:
      type: tosca.capabilities.Endpoint
    host: 
      type: tosca.capabilities.Container
      properties:
        containee_types: [tosca.nodes.WebApplication]

tosca.nodes.WebApplication:
  derived_from: tosca.nodes.Root
  requirements:
    - host: tosca.nodes.WebServer

tosca.nodes.WebApplication.WordPress:
  derived_from: tosca.nodes.WebApplication
  properties:
    admin_user:
      required: no
      type: string
    admin_password:
      required: no
      type: string
    db_host:
      required: no
      type: string
  requirements:
    - host: tosca.nodes.WebServer
    - database_endpoint: tosca.nodes.Database
  interfaces:
    tosca.interfaces.node.Lifecycle:
      inputs:
        db_host: string
        db_port: integer
        db_name: string
        db_user: string
        db_password: string

#######################################################
# Relationship Type
#######################################################
tosca.relationships.Root:
  interfaces: [ tosca.interfaces.relationship.Configure ] 

tosca.relationships.DependsOn:
  derived_from: tosca.relationships.Root
  valid_targets: [ tosca.capabilities.Feature  ]

tosca.relationships.HostedOn:
  derived_from: tosca.relationships.DependsOn
  valid_targets: [ tosca.capabilities.Container ]

tosca.relations.ConnectsTo:
  derived_from: tosca.relationships.DependsOn
  valid_targets: [ tosca.capabilities.Endpoint ]

#######################################################
# Capabilities Type
#######################################################

tosca.capabilities.Root:

tosca.capabilities.Feature:
  derived_from: tosca.capabilities.Root

tosca.capabilities.Container:
  derived_from: tosca.capabilities.Feature
  properties:
    containee_types

tosca.capabilities.Endpoint:
  derived_from: tosca.capabilities.Feature
  properties:
    - protocol
    - port
    - secure

tosca.capabilities.DatabaseEndpoint:
  derived_from: tosca.capabilities.Endpoint
  properties:
    - port_name
  
 #######################################################
 # Interfaces Type
 #######################################################
 
tosca.interfaces.node.Lifecycle:
  create:
    description: Basic lifecycle create operation.
  configure:
    description: Basic lifecycle configure operation.
  start:
    description: Basic lifecycle start operation.
  stop:
    description: Basic lifecycle stop operation.
  delete:
    description: Basic lifecycle delete operation.

tosca.interfaces.relationship.Configure:
  post_configure_source:
    description: Operation to post-configure the source endpoint.
  post_configure_target:
    description: Operation to post-configure the target endpoint.
  add_target:
    description: Operation to add a target node.
  remove_target:
    description: Operation to remove a target node.  
